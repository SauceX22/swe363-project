/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MyitemsImport } from './routes/myitems'
import { Route as LoginImport } from './routes/login'
import { Route as ContactUsImport } from './routes/contact-us'
import { Route as IndexImport } from './routes/index'
import { Route as MarketIndexImport } from './routes/market/index'
import { Route as FoundIndexImport } from './routes/found/index'
import { Route as ChatIndexImport } from './routes/chat/index'
import { Route as MarketNewImport } from './routes/market/new'
import { Route as MarketItemIdImport } from './routes/market/$itemId'
import { Route as FoundNewImport } from './routes/found/new'
import { Route as FoundItemIdImport } from './routes/found/$itemId'
import { Route as ChatChatIdImport } from './routes/chat/$chatId'

// Create/Update Routes

const MyitemsRoute = MyitemsImport.update({
  id: '/myitems',
  path: '/myitems',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ContactUsRoute = ContactUsImport.update({
  id: '/contact-us',
  path: '/contact-us',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MarketIndexRoute = MarketIndexImport.update({
  id: '/market/',
  path: '/market/',
  getParentRoute: () => rootRoute,
} as any)

const FoundIndexRoute = FoundIndexImport.update({
  id: '/found/',
  path: '/found/',
  getParentRoute: () => rootRoute,
} as any)

const ChatIndexRoute = ChatIndexImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRoute,
} as any)

const MarketNewRoute = MarketNewImport.update({
  id: '/market/new',
  path: '/market/new',
  getParentRoute: () => rootRoute,
} as any)

const MarketItemIdRoute = MarketItemIdImport.update({
  id: '/market/$itemId',
  path: '/market/$itemId',
  getParentRoute: () => rootRoute,
} as any)

const FoundNewRoute = FoundNewImport.update({
  id: '/found/new',
  path: '/found/new',
  getParentRoute: () => rootRoute,
} as any)

const FoundItemIdRoute = FoundItemIdImport.update({
  id: '/found/$itemId',
  path: '/found/$itemId',
  getParentRoute: () => rootRoute,
} as any)

const ChatChatIdRoute = ChatChatIdImport.update({
  id: '/chat/$chatId',
  path: '/chat/$chatId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/contact-us': {
      id: '/contact-us'
      path: '/contact-us'
      fullPath: '/contact-us'
      preLoaderRoute: typeof ContactUsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/myitems': {
      id: '/myitems'
      path: '/myitems'
      fullPath: '/myitems'
      preLoaderRoute: typeof MyitemsImport
      parentRoute: typeof rootRoute
    }
    '/chat/$chatId': {
      id: '/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof ChatChatIdImport
      parentRoute: typeof rootRoute
    }
    '/found/$itemId': {
      id: '/found/$itemId'
      path: '/found/$itemId'
      fullPath: '/found/$itemId'
      preLoaderRoute: typeof FoundItemIdImport
      parentRoute: typeof rootRoute
    }
    '/found/new': {
      id: '/found/new'
      path: '/found/new'
      fullPath: '/found/new'
      preLoaderRoute: typeof FoundNewImport
      parentRoute: typeof rootRoute
    }
    '/market/$itemId': {
      id: '/market/$itemId'
      path: '/market/$itemId'
      fullPath: '/market/$itemId'
      preLoaderRoute: typeof MarketItemIdImport
      parentRoute: typeof rootRoute
    }
    '/market/new': {
      id: '/market/new'
      path: '/market/new'
      fullPath: '/market/new'
      preLoaderRoute: typeof MarketNewImport
      parentRoute: typeof rootRoute
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof rootRoute
    }
    '/found/': {
      id: '/found/'
      path: '/found'
      fullPath: '/found'
      preLoaderRoute: typeof FoundIndexImport
      parentRoute: typeof rootRoute
    }
    '/market/': {
      id: '/market/'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contact-us': typeof ContactUsRoute
  '/login': typeof LoginRoute
  '/myitems': typeof MyitemsRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/found/$itemId': typeof FoundItemIdRoute
  '/found/new': typeof FoundNewRoute
  '/market/$itemId': typeof MarketItemIdRoute
  '/market/new': typeof MarketNewRoute
  '/chat': typeof ChatIndexRoute
  '/found': typeof FoundIndexRoute
  '/market': typeof MarketIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contact-us': typeof ContactUsRoute
  '/login': typeof LoginRoute
  '/myitems': typeof MyitemsRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/found/$itemId': typeof FoundItemIdRoute
  '/found/new': typeof FoundNewRoute
  '/market/$itemId': typeof MarketItemIdRoute
  '/market/new': typeof MarketNewRoute
  '/chat': typeof ChatIndexRoute
  '/found': typeof FoundIndexRoute
  '/market': typeof MarketIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/contact-us': typeof ContactUsRoute
  '/login': typeof LoginRoute
  '/myitems': typeof MyitemsRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/found/$itemId': typeof FoundItemIdRoute
  '/found/new': typeof FoundNewRoute
  '/market/$itemId': typeof MarketItemIdRoute
  '/market/new': typeof MarketNewRoute
  '/chat/': typeof ChatIndexRoute
  '/found/': typeof FoundIndexRoute
  '/market/': typeof MarketIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contact-us'
    | '/login'
    | '/myitems'
    | '/chat/$chatId'
    | '/found/$itemId'
    | '/found/new'
    | '/market/$itemId'
    | '/market/new'
    | '/chat'
    | '/found'
    | '/market'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/contact-us'
    | '/login'
    | '/myitems'
    | '/chat/$chatId'
    | '/found/$itemId'
    | '/found/new'
    | '/market/$itemId'
    | '/market/new'
    | '/chat'
    | '/found'
    | '/market'
  id:
    | '__root__'
    | '/'
    | '/contact-us'
    | '/login'
    | '/myitems'
    | '/chat/$chatId'
    | '/found/$itemId'
    | '/found/new'
    | '/market/$itemId'
    | '/market/new'
    | '/chat/'
    | '/found/'
    | '/market/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContactUsRoute: typeof ContactUsRoute
  LoginRoute: typeof LoginRoute
  MyitemsRoute: typeof MyitemsRoute
  ChatChatIdRoute: typeof ChatChatIdRoute
  FoundItemIdRoute: typeof FoundItemIdRoute
  FoundNewRoute: typeof FoundNewRoute
  MarketItemIdRoute: typeof MarketItemIdRoute
  MarketNewRoute: typeof MarketNewRoute
  ChatIndexRoute: typeof ChatIndexRoute
  FoundIndexRoute: typeof FoundIndexRoute
  MarketIndexRoute: typeof MarketIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactUsRoute: ContactUsRoute,
  LoginRoute: LoginRoute,
  MyitemsRoute: MyitemsRoute,
  ChatChatIdRoute: ChatChatIdRoute,
  FoundItemIdRoute: FoundItemIdRoute,
  FoundNewRoute: FoundNewRoute,
  MarketItemIdRoute: MarketItemIdRoute,
  MarketNewRoute: MarketNewRoute,
  ChatIndexRoute: ChatIndexRoute,
  FoundIndexRoute: FoundIndexRoute,
  MarketIndexRoute: MarketIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contact-us",
        "/login",
        "/myitems",
        "/chat/$chatId",
        "/found/$itemId",
        "/found/new",
        "/market/$itemId",
        "/market/new",
        "/chat/",
        "/found/",
        "/market/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contact-us": {
      "filePath": "contact-us.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/myitems": {
      "filePath": "myitems.tsx"
    },
    "/chat/$chatId": {
      "filePath": "chat/$chatId.tsx"
    },
    "/found/$itemId": {
      "filePath": "found/$itemId.tsx"
    },
    "/found/new": {
      "filePath": "found/new.tsx"
    },
    "/market/$itemId": {
      "filePath": "market/$itemId.tsx"
    },
    "/market/new": {
      "filePath": "market/new.tsx"
    },
    "/chat/": {
      "filePath": "chat/index.tsx"
    },
    "/found/": {
      "filePath": "found/index.tsx"
    },
    "/market/": {
      "filePath": "market/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
