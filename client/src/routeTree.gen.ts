/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const MarketLazyImport = createFileRoute('/market')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const MarketItemIdLazyImport = createFileRoute('/market/$itemId')()

// Create/Update Routes

const MarketLazyRoute = MarketLazyImport.update({
  id: '/market',
  path: '/market',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/market.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MarketItemIdLazyRoute = MarketItemIdLazyImport.update({
  id: '/$itemId',
  path: '/$itemId',
  getParentRoute: () => MarketLazyRoute,
} as any).lazy(() =>
  import('./routes/market.$itemId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/market': {
      id: '/market'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketLazyImport
      parentRoute: typeof rootRoute
    }
    '/market/$itemId': {
      id: '/market/$itemId'
      path: '/$itemId'
      fullPath: '/market/$itemId'
      preLoaderRoute: typeof MarketItemIdLazyImport
      parentRoute: typeof MarketLazyImport
    }
  }
}

// Create and export the route tree

interface MarketLazyRouteChildren {
  MarketItemIdLazyRoute: typeof MarketItemIdLazyRoute
}

const MarketLazyRouteChildren: MarketLazyRouteChildren = {
  MarketItemIdLazyRoute: MarketItemIdLazyRoute,
}

const MarketLazyRouteWithChildren = MarketLazyRoute._addFileChildren(
  MarketLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/market': typeof MarketLazyRouteWithChildren
  '/market/$itemId': typeof MarketItemIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/market': typeof MarketLazyRouteWithChildren
  '/market/$itemId': typeof MarketItemIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/market': typeof MarketLazyRouteWithChildren
  '/market/$itemId': typeof MarketItemIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/market' | '/market/$itemId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/market' | '/market/$itemId'
  id: '__root__' | '/' | '/login' | '/market' | '/market/$itemId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  MarketLazyRoute: typeof MarketLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  MarketLazyRoute: MarketLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/market"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/market": {
      "filePath": "market.lazy.tsx",
      "children": [
        "/market/$itemId"
      ]
    },
    "/market/$itemId": {
      "filePath": "market.$itemId.lazy.tsx",
      "parent": "/market"
    }
  }
}
ROUTE_MANIFEST_END */
